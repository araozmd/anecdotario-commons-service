version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.12
    commands:
      - pip install --upgrade pip
      - pip install aws-sam-cli

  build:
    commands:
      - echo "Deploying to staging environment"
      - 'echo "Source artifacts location: $CODEBUILD_SRC_DIR"'
      - 'echo "Build artifacts location: $CODEBUILD_SRC_DIR_BuildOutput"'
      - |
        # Check if stack exists and handle ROLLBACK_FAILED state
        STACK_NAME="commons-service-staging"
        STACK_STATUS=$(aws cloudformation describe-stacks --stack-name $STACK_NAME --query 'Stacks[0].StackStatus' --output text 2>/dev/null)
        
        if [ "$STACK_STATUS" = "ROLLBACK_FAILED" ] || [ "$STACK_STATUS" = "UPDATE_ROLLBACK_FAILED" ]; then
          echo "Stack is in $STACK_STATUS state. Deleting stack before redeployment..."
          aws cloudformation delete-stack --stack-name $STACK_NAME
          echo "Waiting for stack deletion to complete..."
          aws cloudformation wait stack-delete-complete --stack-name $STACK_NAME
          echo "Stack deleted successfully"
        fi
        
        # Deploy the stack
        sam deploy --template-file $CODEBUILD_SRC_DIR_BuildOutput/packaged-template.yaml --config-file samconfig-staging.toml --no-confirm-changeset --no-fail-on-empty-changeset
      - echo "Staging deployment completed"

  post_build:
    commands:
      - echo "Validating staging deployment"
      - |
        STACK_NAME="commons-service-staging"
        aws cloudformation describe-stacks --stack-name $STACK_NAME --query 'Stacks[0].StackStatus' --output text
        if [ $? -eq 0 ]; then
          echo "✅ Staging stack deployed successfully"
        else
          echo "❌ Staging deployment failed"
          exit 1
        fi